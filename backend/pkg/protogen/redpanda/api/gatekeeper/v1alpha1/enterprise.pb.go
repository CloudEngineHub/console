// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: redpanda/api/gatekeeper/v1alpha1/enterprise.proto

package gatekeeperv1alpha1

import (
	reflect "reflect"
	sync "sync"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LicenseSignupRequest_RequestOrigin int32

const (
	LicenseSignupRequest_REQUEST_ORIGIN_UNSPECIFIED LicenseSignupRequest_RequestOrigin = 0
	LicenseSignupRequest_REQUEST_ORIGIN_CONSOLE     LicenseSignupRequest_RequestOrigin = 1
	LicenseSignupRequest_REQUEST_ORIGIN_CLI         LicenseSignupRequest_RequestOrigin = 2
)

// Enum value maps for LicenseSignupRequest_RequestOrigin.
var (
	LicenseSignupRequest_RequestOrigin_name = map[int32]string{
		0: "REQUEST_ORIGIN_UNSPECIFIED",
		1: "REQUEST_ORIGIN_CONSOLE",
		2: "REQUEST_ORIGIN_CLI",
	}
	LicenseSignupRequest_RequestOrigin_value = map[string]int32{
		"REQUEST_ORIGIN_UNSPECIFIED": 0,
		"REQUEST_ORIGIN_CONSOLE":     1,
		"REQUEST_ORIGIN_CLI":         2,
	}
)

func (x LicenseSignupRequest_RequestOrigin) Enum() *LicenseSignupRequest_RequestOrigin {
	p := new(LicenseSignupRequest_RequestOrigin)
	*p = x
	return p
}

func (x LicenseSignupRequest_RequestOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LicenseSignupRequest_RequestOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_enumTypes[0].Descriptor()
}

func (LicenseSignupRequest_RequestOrigin) Type() protoreflect.EnumType {
	return &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_enumTypes[0]
}

func (x LicenseSignupRequest_RequestOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LicenseSignupRequest_RequestOrigin.Descriptor instead.
func (LicenseSignupRequest_RequestOrigin) EnumDescriptor() ([]byte, []int) {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP(), []int{0, 0}
}

type EnterpriseClusterInfo_Platform int32

const (
	EnterpriseClusterInfo_PLATFORM_UNSPECIFIED  EnterpriseClusterInfo_Platform = 0
	EnterpriseClusterInfo_PLATFORM_REDPANDA     EnterpriseClusterInfo_Platform = 1
	EnterpriseClusterInfo_PLATFORM_NON_REDPANDA EnterpriseClusterInfo_Platform = 2
)

// Enum value maps for EnterpriseClusterInfo_Platform.
var (
	EnterpriseClusterInfo_Platform_name = map[int32]string{
		0: "PLATFORM_UNSPECIFIED",
		1: "PLATFORM_REDPANDA",
		2: "PLATFORM_NON_REDPANDA",
	}
	EnterpriseClusterInfo_Platform_value = map[string]int32{
		"PLATFORM_UNSPECIFIED":  0,
		"PLATFORM_REDPANDA":     1,
		"PLATFORM_NON_REDPANDA": 2,
	}
)

func (x EnterpriseClusterInfo_Platform) Enum() *EnterpriseClusterInfo_Platform {
	p := new(EnterpriseClusterInfo_Platform)
	*p = x
	return p
}

func (x EnterpriseClusterInfo_Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnterpriseClusterInfo_Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_enumTypes[1].Descriptor()
}

func (EnterpriseClusterInfo_Platform) Type() protoreflect.EnumType {
	return &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_enumTypes[1]
}

func (x EnterpriseClusterInfo_Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnterpriseClusterInfo_Platform.Descriptor instead.
func (EnterpriseClusterInfo_Platform) EnumDescriptor() ([]byte, []int) {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP(), []int{1, 0}
}

type LicenseSignupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivenName   string                 `protobuf:"bytes,1,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName  string                 `protobuf:"bytes,2,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	CompanyName string                 `protobuf:"bytes,3,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	Email       string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	ClusterInfo *EnterpriseClusterInfo `protobuf:"bytes,5,opt,name=cluster_info,json=clusterInfo,proto3" json:"cluster_info,omitempty"`
	// request_origin is the origin of the request (e.g. console, CLI)
	RequestOrigin LicenseSignupRequest_RequestOrigin `protobuf:"varint,6,opt,name=request_origin,json=requestOrigin,proto3,enum=redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest_RequestOrigin" json:"request_origin,omitempty"`
}

func (x *LicenseSignupRequest) Reset() {
	*x = LicenseSignupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseSignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseSignupRequest) ProtoMessage() {}

func (x *LicenseSignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseSignupRequest.ProtoReflect.Descriptor instead.
func (*LicenseSignupRequest) Descriptor() ([]byte, []int) {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP(), []int{0}
}

func (x *LicenseSignupRequest) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *LicenseSignupRequest) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *LicenseSignupRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *LicenseSignupRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LicenseSignupRequest) GetClusterInfo() *EnterpriseClusterInfo {
	if x != nil {
		return x.ClusterInfo
	}
	return nil
}

func (x *LicenseSignupRequest) GetRequestOrigin() LicenseSignupRequest_RequestOrigin {
	if x != nil {
		return x.RequestOrigin
	}
	return LicenseSignupRequest_REQUEST_ORIGIN_UNSPECIFIED
}

type EnterpriseClusterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string                         `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Platform  EnterpriseClusterInfo_Platform `protobuf:"varint,2,opt,name=platform,proto3,enum=redpanda.api.gatekeeper.v1alpha1.EnterpriseClusterInfo_Platform" json:"platform,omitempty"`
}

func (x *EnterpriseClusterInfo) Reset() {
	*x = EnterpriseClusterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterpriseClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterpriseClusterInfo) ProtoMessage() {}

func (x *EnterpriseClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterpriseClusterInfo.ProtoReflect.Descriptor instead.
func (*EnterpriseClusterInfo) Descriptor() ([]byte, []int) {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP(), []int{1}
}

func (x *EnterpriseClusterInfo) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *EnterpriseClusterInfo) GetPlatform() EnterpriseClusterInfo_Platform {
	if x != nil {
		return x.Platform
	}
	return EnterpriseClusterInfo_PLATFORM_UNSPECIFIED
}

type LicenseSignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License *LicenseSignupResponse_License `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *LicenseSignupResponse) Reset() {
	*x = LicenseSignupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseSignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseSignupResponse) ProtoMessage() {}

func (x *LicenseSignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseSignupResponse.ProtoReflect.Descriptor instead.
func (*LicenseSignupResponse) Descriptor() ([]byte, []int) {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP(), []int{2}
}

func (x *LicenseSignupResponse) GetLicense() *LicenseSignupResponse_License {
	if x != nil {
		return x.License
	}
	return nil
}

type LicenseSignupResponse_License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicenseKey string                 `protobuf:"bytes,1,opt,name=license_key,json=licenseKey,proto3" json:"license_key,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *LicenseSignupResponse_License) Reset() {
	*x = LicenseSignupResponse_License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseSignupResponse_License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseSignupResponse_License) ProtoMessage() {}

func (x *LicenseSignupResponse_License) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseSignupResponse_License.ProtoReflect.Descriptor instead.
func (*LicenseSignupResponse_License) Descriptor() ([]byte, []int) {
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP(), []int{2, 0}
}

func (x *LicenseSignupResponse_License) GetLicenseKey() string {
	if x != nil {
		return x.LicenseKey
	}
	return ""
}

func (x *LicenseSignupResponse_License) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

var File_redpanda_api_gatekeeper_v1alpha1_enterprise_proto protoreflect.FileDescriptor

var file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDesc = []byte{
	0x0a, 0x31, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0a,
	0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x72, 0x02,
	0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x5a, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x75, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e,
	0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x63, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x1a, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f,
	0x43, 0x4f, 0x4e, 0x53, 0x4f, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x10,
	0x02, 0x22, 0x83, 0x02, 0x0a, 0x15, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x0a, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x72, 0x65, 0x64, 0x70,
	0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65,
	0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0x56, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x50,
	0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52,
	0x4d, 0x5f, 0x52, 0x45, 0x44, 0x50, 0x41, 0x4e, 0x44, 0x41, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x44,
	0x50, 0x41, 0x4e, 0x44, 0x41, 0x10, 0x02, 0x22, 0xda, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x1a, 0x66, 0x0a, 0x07,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x98, 0x01, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x36, 0x2e, 0x72,
	0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0xc5, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x69, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x2d, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x65, 0x6e, 0x2f, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x3b, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x41, 0x47, 0xaa, 0x02, 0x20, 0x52,
	0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca,
	0x02, 0x20, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x47,
	0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xe2, 0x02, 0x2c, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70,
	0x69, 0x5c, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x23, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x3a, 0x3a, 0x41, 0x70,
	0x69, 0x3a, 0x3a, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x3a, 0x3a, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescOnce sync.Once
	file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescData = file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDesc
)

func file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescGZIP() []byte {
	file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescOnce.Do(func() {
		file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescData = protoimpl.X.CompressGZIP(file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescData)
	})
	return file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDescData
}

var file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_goTypes = []interface{}{
	(LicenseSignupRequest_RequestOrigin)(0), // 0: redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest.RequestOrigin
	(EnterpriseClusterInfo_Platform)(0),     // 1: redpanda.api.gatekeeper.v1alpha1.EnterpriseClusterInfo.Platform
	(*LicenseSignupRequest)(nil),            // 2: redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest
	(*EnterpriseClusterInfo)(nil),           // 3: redpanda.api.gatekeeper.v1alpha1.EnterpriseClusterInfo
	(*LicenseSignupResponse)(nil),           // 4: redpanda.api.gatekeeper.v1alpha1.LicenseSignupResponse
	(*LicenseSignupResponse_License)(nil),   // 5: redpanda.api.gatekeeper.v1alpha1.LicenseSignupResponse.License
	(*timestamppb.Timestamp)(nil),           // 6: google.protobuf.Timestamp
}
var file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_depIdxs = []int32{
	3, // 0: redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest.cluster_info:type_name -> redpanda.api.gatekeeper.v1alpha1.EnterpriseClusterInfo
	0, // 1: redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest.request_origin:type_name -> redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest.RequestOrigin
	1, // 2: redpanda.api.gatekeeper.v1alpha1.EnterpriseClusterInfo.platform:type_name -> redpanda.api.gatekeeper.v1alpha1.EnterpriseClusterInfo.Platform
	5, // 3: redpanda.api.gatekeeper.v1alpha1.LicenseSignupResponse.license:type_name -> redpanda.api.gatekeeper.v1alpha1.LicenseSignupResponse.License
	6, // 4: redpanda.api.gatekeeper.v1alpha1.LicenseSignupResponse.License.expiration:type_name -> google.protobuf.Timestamp
	2, // 5: redpanda.api.gatekeeper.v1alpha1.EnterpriseService.LicenseSignup:input_type -> redpanda.api.gatekeeper.v1alpha1.LicenseSignupRequest
	4, // 6: redpanda.api.gatekeeper.v1alpha1.EnterpriseService.LicenseSignup:output_type -> redpanda.api.gatekeeper.v1alpha1.LicenseSignupResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_init() }
func file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_init() {
	if File_redpanda_api_gatekeeper_v1alpha1_enterprise_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseSignupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterpriseClusterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseSignupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseSignupResponse_License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_goTypes,
		DependencyIndexes: file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_depIdxs,
		EnumInfos:         file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_enumTypes,
		MessageInfos:      file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_msgTypes,
	}.Build()
	File_redpanda_api_gatekeeper_v1alpha1_enterprise_proto = out.File
	file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_rawDesc = nil
	file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_goTypes = nil
	file_redpanda_api_gatekeeper_v1alpha1_enterprise_proto_depIdxs = nil
}
