// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension="
// @generated from file redpanda/api/gatekeeper/v1alpha1/gatekeeper.proto (package redpanda.api.gatekeeper.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.SignUpRequest
 */
export class SignUpRequest extends Message<SignUpRequest> {
  /**
   * @generated from field: string given_name = 1;
   */
  givenName = "";

  /**
   * @generated from field: string family_name = 2;
   */
  familyName = "";

  /**
   * @generated from field: string company_name = 3;
   */
  companyName = "";

  /**
   * @generated from field: string email = 4;
   */
  email = "";

  /**
   * @generated from field: string password = 5;
   */
  password = "";

  constructor(data?: PartialMessage<SignUpRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.SignUpRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "given_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "family_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "company_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpRequest {
    return new SignUpRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpRequest {
    return new SignUpRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpRequest {
    return new SignUpRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignUpRequest | PlainMessage<SignUpRequest> | undefined, b: SignUpRequest | PlainMessage<SignUpRequest> | undefined): boolean {
    return proto3.util.equals(SignUpRequest, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.SignUpResponse
 */
export class SignUpResponse extends Message<SignUpResponse> {
  /**
   * @generated from field: string auth0_user_id = 1;
   */
  auth0UserId = "";

  constructor(data?: PartialMessage<SignUpResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.SignUpResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth0_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpResponse {
    return new SignUpResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpResponse {
    return new SignUpResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpResponse {
    return new SignUpResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignUpResponse | PlainMessage<SignUpResponse> | undefined, b: SignUpResponse | PlainMessage<SignUpResponse> | undefined): boolean {
    return proto3.util.equals(SignUpResponse, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.SignUpFromMarketplaceRequest
 */
export class SignUpFromMarketplaceRequest extends Message<SignUpFromMarketplaceRequest> {
  /**
   * @generated from field: string admin_email = 1;
   */
  adminEmail = "";

  /**
   * @generated from field: string organization_name = 2;
   */
  organizationName = "";

  /**
   * @generated from field: string suger_entitlement_id = 3;
   */
  sugerEntitlementId = "";

  /**
   * @generated from field: string suger_partner = 4;
   */
  sugerPartner = "";

  constructor(data?: PartialMessage<SignUpFromMarketplaceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.SignUpFromMarketplaceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "admin_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "suger_entitlement_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "suger_partner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpFromMarketplaceRequest {
    return new SignUpFromMarketplaceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpFromMarketplaceRequest {
    return new SignUpFromMarketplaceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpFromMarketplaceRequest {
    return new SignUpFromMarketplaceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignUpFromMarketplaceRequest | PlainMessage<SignUpFromMarketplaceRequest> | undefined, b: SignUpFromMarketplaceRequest | PlainMessage<SignUpFromMarketplaceRequest> | undefined): boolean {
    return proto3.util.equals(SignUpFromMarketplaceRequest, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.SignUpFromMarketplaceResponse
 */
export class SignUpFromMarketplaceResponse extends Message<SignUpFromMarketplaceResponse> {
  constructor(data?: PartialMessage<SignUpFromMarketplaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.SignUpFromMarketplaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignUpFromMarketplaceResponse {
    return new SignUpFromMarketplaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignUpFromMarketplaceResponse {
    return new SignUpFromMarketplaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignUpFromMarketplaceResponse {
    return new SignUpFromMarketplaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignUpFromMarketplaceResponse | PlainMessage<SignUpFromMarketplaceResponse> | undefined, b: SignUpFromMarketplaceResponse | PlainMessage<SignUpFromMarketplaceResponse> | undefined): boolean {
    return proto3.util.equals(SignUpFromMarketplaceResponse, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.SendVerifyEmailRequest
 */
export class SendVerifyEmailRequest extends Message<SendVerifyEmailRequest> {
  /**
   * @generated from field: string auth0_user_id = 1;
   */
  auth0UserId = "";

  constructor(data?: PartialMessage<SendVerifyEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.SendVerifyEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth0_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendVerifyEmailRequest {
    return new SendVerifyEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendVerifyEmailRequest {
    return new SendVerifyEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendVerifyEmailRequest {
    return new SendVerifyEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendVerifyEmailRequest | PlainMessage<SendVerifyEmailRequest> | undefined, b: SendVerifyEmailRequest | PlainMessage<SendVerifyEmailRequest> | undefined): boolean {
    return proto3.util.equals(SendVerifyEmailRequest, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.SendVerifyEmailResponse
 */
export class SendVerifyEmailResponse extends Message<SendVerifyEmailResponse> {
  constructor(data?: PartialMessage<SendVerifyEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.SendVerifyEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendVerifyEmailResponse {
    return new SendVerifyEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendVerifyEmailResponse {
    return new SendVerifyEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendVerifyEmailResponse {
    return new SendVerifyEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendVerifyEmailResponse | PlainMessage<SendVerifyEmailResponse> | undefined, b: SendVerifyEmailResponse | PlainMessage<SendVerifyEmailResponse> | undefined): boolean {
    return proto3.util.equals(SendVerifyEmailResponse, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.ValidateEntitlementRequest
 */
export class ValidateEntitlementRequest extends Message<ValidateEntitlementRequest> {
  /**
   * @generated from field: string entitlement_id = 1;
   */
  entitlementId = "";

  constructor(data?: PartialMessage<ValidateEntitlementRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.ValidateEntitlementRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entitlement_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateEntitlementRequest {
    return new ValidateEntitlementRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateEntitlementRequest {
    return new ValidateEntitlementRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateEntitlementRequest {
    return new ValidateEntitlementRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateEntitlementRequest | PlainMessage<ValidateEntitlementRequest> | undefined, b: ValidateEntitlementRequest | PlainMessage<ValidateEntitlementRequest> | undefined): boolean {
    return proto3.util.equals(ValidateEntitlementRequest, a, b);
  }
}

/**
 * @generated from message redpanda.api.gatekeeper.v1alpha1.ValidateEntitlementResponse
 */
export class ValidateEntitlementResponse extends Message<ValidateEntitlementResponse> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid = false;

  /**
   * @generated from field: string existing_organization_id = 2;
   */
  existingOrganizationId = "";

  constructor(data?: PartialMessage<ValidateEntitlementResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.gatekeeper.v1alpha1.ValidateEntitlementResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "existing_organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidateEntitlementResponse {
    return new ValidateEntitlementResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidateEntitlementResponse {
    return new ValidateEntitlementResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidateEntitlementResponse {
    return new ValidateEntitlementResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ValidateEntitlementResponse | PlainMessage<ValidateEntitlementResponse> | undefined, b: ValidateEntitlementResponse | PlainMessage<ValidateEntitlementResponse> | undefined): boolean {
    return proto3.util.equals(ValidateEntitlementResponse, a, b);
  }
}

