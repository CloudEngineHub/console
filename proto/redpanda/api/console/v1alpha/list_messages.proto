syntax = "proto3";

package redpanda.api.console.v1alpha;

import "buf/validate/validate.proto";

// ListMessagesRequest is the request for ListMessages call.
message ListMessagesRequest {
  string topic = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 128
  ]; // Topic name.

  sint64 start_offset = 2 [
    (buf.validate.field).sint32 = { in: [-1, -2, -3, -4] }
  ]; // Start offset. -1 for recent (newest - results), -2 for oldest offset, -3 for newest, -4 for timestamp.

  int64 start_timestamp = 3; // Start offset by unix timestamp in ms (only considered if start offset is set to -4).
  int32 partition_id = 4 [(buf.validate.field).sint32 = { gte: -1 }]; // -1 for all partition ids
  int32 max_results = 5; // Maximum number of results
  string filter_interpreter_code = 6; // Base64 encoded code
  bytes enterprise = 7; // Enterprise may only be set in the Enterprise mode. The JSON deserialization is deferred.
}

// ListMessagesResponse is the response for ListMessages call.
message ListMessagesResponse {
  KafkaRecordPayload key = 1;
  KafkaRecordPayload value = 2;
}

// KafkaRecordPayload is record payload representation.
message KafkaRecordPayload {
  bytes original_payload = 1;
  int32 payload_size = 2;
  bytes deserialized_payload = 3;
  bool is_payload_too_large = 4;
}

// ConsoleService represents the Console API service.
service ConsoleService {
  // ListMessages lists the messages according to the requested query.
  rpc ListMessages(ListMessagesRequest) returns (stream ListMessagesResponse) {}
}
